{
	"info": {
		"_postman_id": "2ea955e3-e446-4b51-b12b-32258c5436b7",
		"name": "Test M1 EEMI Mouhamadou Khalida...",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24610154"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is within an acceptable range\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.token).to.exist;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Token is a non-empty string\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData.token).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Token should be a non-empty string\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3MTcxNjM4NzgsImV4cCI6MTcxNzE2NzQ3OCwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluIn0.OoAdJK-3dwQqzsq7WRotR7jsgsv-rkKLVF7X1FrcKKr9EKaLujvDcH6YBiyzX8O3dmymYymERUw5BUURSM6k-WBpNM8SSFAJxaEeUFtPxMTWk_BIZfpdd9LUEJQMvzUyzewIc0vfJv3JBIXHZe2aavLoCMzbfCkqTkSWqrk45Tp69xnkXQptvh6Bts0_fde3pxx-saNOCcbaxrbHe2Weka0HJptOLp4zKtAW3dEG2np4FV3suAM08fCONix7xIs38OFXgU53OCXlf-xFSZthlSKCSMOr_3OeFsop_z8ePImL11M16hnzpbUk0cAT0dXJ8mY9JVhfS5sQw1smsEEjTQ",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"admin\",\r\n    \"password\": \"admin\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8888/login_check",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8888",
					"path": [
						"login_check"
					]
				}
			},
			"response": []
		},
		{
			"name": "getUserList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Roles is an array with at least one element\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('array');\r",
							"  responseData.forEach(function(user) {\r",
							"    pm.expect(user.roles).to.be.an('array').that.is.not.empty;\r",
							"  });\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3MTcxNzA2MzQsImV4cCI6MTcxNzE3NDIzNCwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluIn0.BxgQGg91zAiIFVcwa2qTn1SSRzDz6qxAf56G7KeoDa55lphcN4Mkie1LloZUckS1AU2-UmbP3oecs42OONxb9RG1y2_GV5JUogbUL5LzgHAslkAy7-CJ2aXpLtImUwkHOm-yPWDQ15ixdbPFyy1W2D5eo1E8e-f7lT7AuyjBG95AjpQyiqzmcJoPyDgRyWOr3uJA44960_SE2GWIjWJo-CZfuTDhbSjyG1dm1Jnbf5RyRfH4BFutgN8kGcBpWt9iVaxjtFgnsAX-PcukHDsOOkUrCgCULltj1eozFK0GjWsVfGHPI88XdXMeIIC1S8sm2t19MwhvCgXXhX4gKk65tQ",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8888/user",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8888",
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "postUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 201\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(201);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.id).to.exist;\r",
							"    pm.expect(responseData.email).to.exist;\r",
							"    pm.expect(responseData.roles).to.exist;\r",
							"    pm.expect(responseData.username).to.exist;\r",
							"    pm.expect(responseData.creationDate).to.exist;\r",
							"    pm.expect(responseData.lastUpdateDate).to.exist;\r",
							"    pm.expect(responseData.wallet).to.exist;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Email is in a valid format\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData.email).to.be.a('string').and.to.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/, \"Email should be in a valid format\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Roles array is present and contains at least one element\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('object');\r",
							"  pm.expect(responseData.roles).to.be.an('array').and.to.have.lengthOf.at.least(1);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"testcreezdezatiefezeeddezozzzeezdan\",\r\n    \"email\": \"tesdzdazdedfedazdcaefezdzdezat@gmail.com\",\r\n    \"password\":\"tesedtpassfezword\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8888/user",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8888",
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "getCurrentUserInfos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('object');\r",
							"  pm.expect(responseData.id).to.exist;\r",
							"  pm.expect(responseData.email).to.exist;\r",
							"  pm.expect(responseData.roles).to.exist;\r",
							"  pm.expect(responseData.username).to.exist;\r",
							"  pm.expect(responseData.creationDate).to.exist;\r",
							"  pm.expect(responseData.lastUpdateDate).to.exist;\r",
							"  pm.expect(responseData.wallet).to.exist;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Email is in a valid format\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData.email).to.be.a('string').and.to.match(/^.+@.+\\..+$/);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Roles array should not be empty\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('object');\r",
							"  pm.expect(responseData.roles).to.be.an('array').and.to.have.lengthOf.at.least(1, \"Roles array should not be empty\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3MTcxNzA2MzQsImV4cCI6MTcxNzE3NDIzNCwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluIn0.BxgQGg91zAiIFVcwa2qTn1SSRzDz6qxAf56G7KeoDa55lphcN4Mkie1LloZUckS1AU2-UmbP3oecs42OONxb9RG1y2_GV5JUogbUL5LzgHAslkAy7-CJ2aXpLtImUwkHOm-yPWDQ15ixdbPFyy1W2D5eo1E8e-f7lT7AuyjBG95AjpQyiqzmcJoPyDgRyWOr3uJA44960_SE2GWIjWJo-CZfuTDhbSjyG1dm1Jnbf5RyRfH4BFutgN8kGcBpWt9iVaxjtFgnsAX-PcukHDsOOkUrCgCULltj1eozFK0GjWsVfGHPI88XdXMeIIC1S8sm2t19MwhvCgXXhX4gKk65tQ",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8888/user/profile",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8888",
					"path": [
						"user",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "getUserInfos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('object');\r",
							"  pm.expect(responseData.id).to.exist;\r",
							"  pm.expect(responseData.email).to.exist;\r",
							"  pm.expect(responseData.roles).to.exist;\r",
							"  pm.expect(responseData.username).to.exist;\r",
							"  pm.expect(responseData.creationDate).to.exist;\r",
							"  pm.expect(responseData.lastUpdateDate).to.exist;\r",
							"  pm.expect(responseData.wallet).to.exist;\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Email is in a valid format\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData.email).to.be.a('string');\r",
							"  pm.expect(responseData.email).to.match(/\\S+@\\S+\\.\\S+/);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Roles array should not be empty\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData.roles).to.be.an('array').that.is.not.empty;\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3MTcxNzA2MzQsImV4cCI6MTcxNzE3NDIzNCwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluIn0.BxgQGg91zAiIFVcwa2qTn1SSRzDz6qxAf56G7KeoDa55lphcN4Mkie1LloZUckS1AU2-UmbP3oecs42OONxb9RG1y2_GV5JUogbUL5LzgHAslkAy7-CJ2aXpLtImUwkHOm-yPWDQ15ixdbPFyy1W2D5eo1E8e-f7lT7AuyjBG95AjpQyiqzmcJoPyDgRyWOr3uJA44960_SE2GWIjWJo-CZfuTDhbSjyG1dm1Jnbf5RyRfH4BFutgN8kGcBpWt9iVaxjtFgnsAX-PcukHDsOOkUrCgCULltj1eozFK0GjWsVfGHPI88XdXMeIIC1S8sm2t19MwhvCgXXhX4gKk65tQ",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8888/user/a3c42f68-7273-4ac1-af7a-bd16222fa5be",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8888",
					"path": [
						"user",
						"a3c42f68-7273-4ac1-af7a-bd16222fa5be"
					]
				}
			},
			"response": []
		},
		{
			"name": "patchCurrentUserInfos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Id is a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should not be empty\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Email is in a valid format\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData.email).to.be.a('string').and.to.match(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3MTcxNzA2MzQsImV4cCI6MTcxNzE3NDIzNCwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluIn0.BxgQGg91zAiIFVcwa2qTn1SSRzDz6qxAf56G7KeoDa55lphcN4Mkie1LloZUckS1AU2-UmbP3oecs42OONxb9RG1y2_GV5JUogbUL5LzgHAslkAy7-CJ2aXpLtImUwkHOm-yPWDQ15ixdbPFyy1W2D5eo1E8e-f7lT7AuyjBG95AjpQyiqzmcJoPyDgRyWOr3uJA44960_SE2GWIjWJo-CZfuTDhbSjyG1dm1Jnbf5RyRfH4BFutgN8kGcBpWt9iVaxjtFgnsAX-PcukHDsOOkUrCgCULltj1eozFK0GjWsVfGHPI88XdXMeIIC1S8sm2t19MwhvCgXXhX4gKk65tQ",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"admin\",\r\n    \"email\": \"adminmodifier@gmail.com\",\r\n    \"password\":\"adminnew\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8888/user/profile",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8888",
					"path": [
						"user",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "patchUserInfos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData).to.have.property('id');\r",
							"    pm.expect(responseData).to.have.property('email');\r",
							"    pm.expect(responseData).to.have.property('username');\r",
							"    pm.expect(responseData).to.have.property('creationDate');\r",
							"    pm.expect(responseData).to.have.property('lastUpdateDate');\r",
							"    pm.expect(responseData).to.have.property('wallet');\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Roles array is present and contains at least one element\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.have.property('roles').that.is.an('array').and.to.have.lengthOf.at.least(1);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3MTcxNzA2MzQsImV4cCI6MTcxNzE3NDIzNCwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluIn0.BxgQGg91zAiIFVcwa2qTn1SSRzDz6qxAf56G7KeoDa55lphcN4Mkie1LloZUckS1AU2-UmbP3oecs42OONxb9RG1y2_GV5JUogbUL5LzgHAslkAy7-CJ2aXpLtImUwkHOm-yPWDQ15ixdbPFyy1W2D5eo1E8e-f7lT7AuyjBG95AjpQyiqzmcJoPyDgRyWOr3uJA44960_SE2GWIjWJo-CZfuTDhbSjyG1dm1Jnbf5RyRfH4BFutgN8kGcBpWt9iVaxjtFgnsAX-PcukHDsOOkUrCgCULltj1eozFK0GjWsVfGHPI88XdXMeIIC1S8sm2t19MwhvCgXXhX4gKk65tQ",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"admin\",\r\n    \"email\": \"adminmodifier@gmail.com\",\r\n    \"password\":\"adminnew\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8888/user/a3c42f68-7273-4ac1-af7a-bd16222fa5be",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8888",
					"path": [
						"user",
						"a3c42f68-7273-4ac1-af7a-bd16222fa5be"
					]
				}
			},
			"response": []
		},
		{
			"name": "createGame",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"DateCreation is in a valid date format\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array');\r",
							"    responseData.forEach(function(item) {\r",
							"        pm.expect(item.dateCreation).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$/);\r",
							"    });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Turns array is present and contains expected number of elements\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"\r",
							"  pm.expect(responseData).to.be.an('array');\r",
							"  pm.expect(responseData).to.have.lengthOf.at.least(1, \"Turns array should not be empty\");\r",
							"  responseData.forEach(function(item) {\r",
							"    pm.expect(item.turns).to.exist.and.to.be.an('array');\r",
							"    // Additional check for expected number of elements in the \"turns\" array can be added here\r",
							"  });\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3MTcxNzA2MzQsImV4cCI6MTcxNzE3NDIzNCwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluIn0.BxgQGg91zAiIFVcwa2qTn1SSRzDz6qxAf56G7KeoDa55lphcN4Mkie1LloZUckS1AU2-UmbP3oecs42OONxb9RG1y2_GV5JUogbUL5LzgHAslkAy7-CJ2aXpLtImUwkHOm-yPWDQ15ixdbPFyy1W2D5eo1E8e-f7lT7AuyjBG95AjpQyiqzmcJoPyDgRyWOr3uJA44960_SE2GWIjWJo-CZfuTDhbSjyG1dm1Jnbf5RyRfH4BFutgN8kGcBpWt9iVaxjtFgnsAX-PcukHDsOOkUrCgCULltj1eozFK0GjWsVfGHPI88XdXMeIIC1S8sm2t19MwhvCgXXhX4gKk65tQ",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8888/game",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8888",
					"path": [
						"game"
					]
				}
			},
			"response": []
		},
		{
			"name": "getListOfGames",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has the required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    \r",
							"    pm.expect(responseData).to.be.an('array');\r",
							"    \r",
							"    responseData.forEach(function(item) {\r",
							"        pm.expect(item).to.have.property('id');\r",
							"        pm.expect(item).to.have.property('user');\r",
							"        pm.expect(item).to.have.property('status');\r",
							"        pm.expect(item).to.have.property('dateCreation');\r",
							"        pm.expect(item).to.have.property('lastUpdateDate');\r",
							"        pm.expect(item).to.have.property('turns');\r",
							"    });\r",
							"});\r",
							"\r",
							"pm.test(\"DateCreation is in a valid date format\", function () {\r",
							"  const responseData = pm.response.json();\r",
							"  \r",
							"  pm.expect(responseData).to.be.an('array');\r",
							"  responseData.forEach(function(item) {\r",
							"    pm.expect(item.dateCreation).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$/);\r",
							"  });\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3MTcxNzA2MzQsImV4cCI6MTcxNzE3NDIzNCwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluIn0.BxgQGg91zAiIFVcwa2qTn1SSRzDz6qxAf56G7KeoDa55lphcN4Mkie1LloZUckS1AU2-UmbP3oecs42OONxb9RG1y2_GV5JUogbUL5LzgHAslkAy7-CJ2aXpLtImUwkHOm-yPWDQ15ixdbPFyy1W2D5eo1E8e-f7lT7AuyjBG95AjpQyiqzmcJoPyDgRyWOr3uJA44960_SE2GWIjWJo-CZfuTDhbSjyG1dm1Jnbf5RyRfH4BFutgN8kGcBpWt9iVaxjtFgnsAX-PcukHDsOOkUrCgCULltj1eozFK0GjWsVfGHPI88XdXMeIIC1S8sm2t19MwhvCgXXhX4gKk65tQ",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://127.0.0.1:8888/game",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8888",
					"path": [
						"game"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteGame",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3MTcxNzA2MzQsImV4cCI6MTcxNzE3NDIzNCwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluIn0.BxgQGg91zAiIFVcwa2qTn1SSRzDz6qxAf56G7KeoDa55lphcN4Mkie1LloZUckS1AU2-UmbP3oecs42OONxb9RG1y2_GV5JUogbUL5LzgHAslkAy7-CJ2aXpLtImUwkHOm-yPWDQ15ixdbPFyy1W2D5eo1E8e-f7lT7AuyjBG95AjpQyiqzmcJoPyDgRyWOr3uJA44960_SE2GWIjWJo-CZfuTDhbSjyG1dm1Jnbf5RyRfH4BFutgN8kGcBpWt9iVaxjtFgnsAX-PcukHDsOOkUrCgCULltj1eozFK0GjWsVfGHPI88XdXMeIIC1S8sm2t19MwhvCgXXhX4gKk65tQ",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8888/game/cf140ed5-f5e9-49b9-b59a-ef85f573a753",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8888",
					"path": [
						"game",
						"cf140ed5-f5e9-49b9-b59a-ef85f573a753"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteGame Copy",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3MTcxNzA2MzQsImV4cCI6MTcxNzE3NDIzNCwicm9sZXMiOlsiUk9MRV9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluIn0.BxgQGg91zAiIFVcwa2qTn1SSRzDz6qxAf56G7KeoDa55lphcN4Mkie1LloZUckS1AU2-UmbP3oecs42OONxb9RG1y2_GV5JUogbUL5LzgHAslkAy7-CJ2aXpLtImUwkHOm-yPWDQ15ixdbPFyy1W2D5eo1E8e-f7lT7AuyjBG95AjpQyiqzmcJoPyDgRyWOr3uJA44960_SE2GWIjWJo-CZfuTDhbSjyG1dm1Jnbf5RyRfH4BFutgN8kGcBpWt9iVaxjtFgnsAX-PcukHDsOOkUrCgCULltj1eozFK0GjWsVfGHPI88XdXMeIIC1S8sm2t19MwhvCgXXhX4gKk65tQ",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://127.0.0.1:8888/game/cf140ed5-f5e9-49b9-b59a-ef85f573a753",
					"protocol": "http",
					"host": [
						"127",
						"0",
						"0",
						"1"
					],
					"port": "8888",
					"path": [
						"game",
						"cf140ed5-f5e9-49b9-b59a-ef85f573a753"
					]
				}
			},
			"response": []
		}
	]
}